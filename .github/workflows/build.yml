name: Build

on: [ push, pull_request ]

jobs:
  # frontend:
  #   name: Front-end
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #         cache: 'yarn'
  #         cache-dependency-path: ./web/yarn.lock
  #     - run: yarn install && CI=false yarn run build
  #       working-directory: ./web

  # backend:
  #   name: Back-end
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: '^1.16.5'
  #         cache-dependency-path: ./go.mod
  #     - run: go version
  #     - name: Build
  #       run: |
  #         go build -race -ldflags "-extldflags '-static'"
  #       working-directory: ./

  release-and-push:
    name: Release And Push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          target: STANDARD
          platforms: linux/amd64
          push: true
          tags: ripic/casdoor:latest

      - name: Push All In One Version to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          target: ALLINONE
          platforms: linux/amd64
          push: true
          tags: ripic/casdoor-all-in-one:latest
